#!/bin/sh /etc/rc.common
START=99
STOP=10
SERVICE_DAEMONIZE=1
CRON_FILE=/etc/crontabs/root
Z=/usr/share/adbyby
P=/tmp/adbyby
DATA_PATH=$P/data
CONF_PATH=/etc/adbyby_conf
ipt_n="iptables -t nat"
STATUS=Y
TAG="_ADBYBY_RULE_"
enable=$(uci -q get adbyby.@adbyby[0].enable) || enable=0
flash=$(uci -q get adbyby.@adbyby[0].flash) || flash=0
url=$(uci -q get adbyby.@adbyby[0].url)

uci_get_by_type(){
	ret=$(uci get adbyby.@acl_rule[$1].$2 2>/dev/null)
	echo $ret
}

get_config(){
	config_get_bool cron_mode $1 cron_mode 1
	config_get_bool block_ios $1 block_ios 0
	config_get_bool block_cnshort $1 block_cnshort 0
	config_get wan_mode $1 wan_mode 1
	config_get time_update $1 time_update 6
}

add_cron(){
	if [ $cron_mode = 1 ];then
		if ! grep -wq "$time_update \* \* \* .*adblock" $CRON_FILE;then
			grep -q adblock $CRON_FILE && sed -i '/adblock/d' $CRON_FILE
			echo "0 $time_update * * * $P/adblock.sh > /tmp/adupdate.log 2>&1" >> $CRON_FILE
			/etc/init.d/cron restart
		fi
	else
		del_cron
	fi
}

del_cron(){
	if grep -q adblock $CRON_FILE;then
		sed -i '/adblock/d' $CRON_FILE
		/etc/init.d/cron restart
	fi
}

ip_rule(){
	ipset -N adbyby_esc hash:ip
	$ipt_n -A ADBYBY -m set --match-set adbyby_esc dst -j RETURN

	let A=$(uci show adbyby | grep 'filter_mode' | wc -l)-1
	for i in $(seq 0 $A);do
		ip=$(uci_get_by_type $i ipaddr)
		mode=$(uci_get_by_type $i filter_mode)
		if [ -n "$ip" ];then
			case $mode in
				disable)$ipt_n -A ADBYBY -s $ip -j RETURN;;
				global)$ipt_n -A ADBYBY -s $ip -p tcp -j REDIRECT --to-ports 8118;;
			esac
		fi
	done

	case $wan_mode in
		0)$ipt_n -A ADBYBY -p tcp -j REDIRECT --to-ports 8118;;
		1)ipset -N adbyby_wan hash:ip;$ipt_n -A ADBYBY -p tcp -m set --match-set adbyby_wan dst -j REDIRECT --to-ports 8118;;
	esac

	echo "create blockip hash:net family inet hashsize 1024 maxelem 65536" > /tmp/blockip.ipset
	awk '!/^$/&&!/^#/{printf("add blockip %s'" "'\n",$0)}' $CONF_PATH/blockip.conf >> /tmp/blockip.ipset
	ipset -! restore < /tmp/blockip.ipset 2>/dev/null
	rm -f /tmp/blockip.ipset
	iptables -I FORWARD -m set --match-set blockip dst -m comment --comment "$TAG" -j DROP
	iptables -I OUTPUT -m set --match-set blockip dst -m comment --comment "$TAG" -j DROP
}

add_dns(){
	mkdir -p /tmp/dnsmasq.adbyby
	mkdir -p /tmp/dnsmasq.d
	echo conf-dir=/tmp/dnsmasq.adbyby > /tmp/dnsmasq.d/dnsmasq-adbyby.conf
	awk '!/^$/&&!/^#/{printf("ipset=/%s/'"adbyby_esc"'\n",$0)}' $CONF_PATH/adesc.conf > /tmp/dnsmasq.adbyby/01-dnsmasq.esc
	awk '!/^$/&&!/^#/{printf("address=/%s/\n",$0)}' $CONF_PATH/adblack.conf > /tmp/dnsmasq.adbyby/02-dnsmasq.black
	if [ $wan_mode = 1 ];then
		awk '!/^$/&&!/^#/{printf("ipset=/%s/'"adbyby_wan"'\n",$0)}' $CONF_PATH/adhost.conf > /tmp/dnsmasq.adbyby/03-adbyby-ipset.conf
		ln -sf $P/dnsmasq/dnsmasq.adblock /tmp/dnsmasq.adbyby/04-dnsmasq.adblock
	fi
	[ $block_ios = 1 ] && echo 'address=/mesu.apple.com/' >> /tmp/dnsmasq.adbyby/02-dnsmasq.black
	if [ $block_cnshort = 1 ];then
		cat <<-EOF >> /tmp/dnsmasq.adbyby/02-dnsmasq.black
address=/amemv.com/
address=/tiktokv.com/
address=/snssdk.com/
address=/douyin.com/
address=/ixigua.com/
address=/pstatp.com/
address=/ixiguavideo.com/
address=/v.kandian.qq.com/
address=/yximgs.com/
address=/gifshow.com/
address=/ksapisrv.com/
address=/kuaishoupay.com/
address=/ksyun.com/
address=/live.xycdn.com/
address=/danuoyi.alicdn.com/
address=/v.weishi.qq.com/
address=/pearvideo.com/
address=/miaopai.com/
address=/kuaishou.com/
address=/qupai.me/
address=/meipai.com/
address=/huoshan.com/
address=/ergengtv.com/
address=/baijiahao.baidu.com/
address=/xiongzhang.baidu.com/
EOF
	fi
	if [ -n "$url" ];then
		mkdir -p $P/rules
		if [ $flash = 1 ];then
			[ -h $P/rules/3rd.conf ] || ln -sf /etc/adbyby_conf/rules/3rd.conf $P/rules/3rd.conf
			[ -h $P/rules/url ] || ln -sf /etc/adbyby_conf/rules/url $P/rules/url
		fi
		ln -sf $P/rules/3rd.conf /tmp/dnsmasq.adbyby/05-3rd.conf
	fi
}

add_rule(){
	$ipt_n -N ADBYBY
	ipset restore < $P/adbyby_local
	$ipt_n -A ADBYBY -m set --match-set adbyby_local dst -j RETURN
	ip_rule
	$ipt_n -I PREROUTING -p tcp --dport 80 -m comment --comment "$TAG" -j ADBYBY
	$P/gen_include gen
}

del_rule(){
	$ipt_n -D PREROUTING -p tcp --dport 80 -m comment --comment "$TAG" -j ADBYBY 2>/dev/null
	$ipt_n -F ADBYBY 2>/dev/null
	$ipt_n -X ADBYBY 2>/dev/null
	iptables -D FORWARD -m set --match-set blockip dst -m comment --comment "$TAG" -j DROP 2>/dev/null
	iptables -D OUTPUT -m set --match-set blockip dst -m comment --comment "$TAG" -j DROP 2>/dev/null
	ipset -X adbyby_esc 2>/dev/null
	ipset -X adbyby_wan 2>/dev/null
	ipset -X blockip 2>/dev/null
	ipset -X adbyby_local 2>/dev/null
	$Z/gen_include default
}

addown(){
	local retry=1
	while ps -w | grep $P/addown.sh | grep -v grep >/dev/null 2>&1;do
		[ $retry -ge 10 ] && return 1 || let retry++
		sleep 1
	done
	rm -f /var/lock/adbyby.lock
	service_start $P/addown.sh --down $B
}

start(){
	config_load adbyby
	config_foreach get_config adbyby
	if [ $enable = 0 ];then
		echo "Adbyby is disabled."
		exit 1
	fi
	if pgrep $P/adbyby >/dev/null;then
		echo "Adbyby has started."
		exit 1
	fi
	echo "Start mem mode"
	if mount | grep adbyby >/dev/null 2>&1;then
		echo "Adbyby has mount"
	else
		echo "Mount Adbyby"
		cp -a $Z /tmp
		mount --bind $P $Z 2>/dev/null || exit 1
	fi
	[ ! -x $P/adbyby -o "$(head -1 $DATA_PATH/lazy.txt | awk -F' ' '{print $3,$4}')" = "2017-1-2 00:12:25" ] && A=1
	[ $wan_mode = 1 ] && [ ! -s $P/dnsmasq/dnsmasq.adblock ] && A=1
	if [ -n "$url" ];then
		[ $flash = 0 -a ! -s $P/rules/3rd.conf ] && A=1 && B=1
		[ $flash = 1 -a ! -s /etc/adbyby_conf/rules/3rd.conf ] && A=1 && B=1
	fi
	if [ "$A" = 1 ];then
		echo "Download Bin and Rules..."
		addown
		exit 9
	fi
	echo "Add Adbyby rules"
	grep -v ^! $CONF_PATH/rules.txt > $DATA_PATH/user.txt
	echo "Start Adbyby"
	service_start $P/adbyby
	add_dns
	add_cron
	add_rule
	if [ $STATUS = Y ];then
		echo "Dnsmasq Change"
		/etc/init.d/dnsmasq restart >/dev/null 2>&1
	fi
}

stop(){
	del_rule
	rm -rf /tmp/dnsmasq.d/dnsmasq-adbyby.conf /tmp/dnsmasq.adbyby
	echo "Stop Adbyby"
	service_stop $P/adbyby 2>/dev/null
	if [ "$(echo $url | sed 's/ /\n/g' | sort -u)" != "$(cat $P/rules/url 2>/dev/null)" ];then
		rm -rf $P/rules
		[ -d /etc/adbyby_conf/rules ] && rm -rf /etc/adbyby_conf/rules
	fi
	([ -h $P/rules/url -a $flash = 0 ] || [ -z "$url" ]) && rm -rf $P/rules
	[ $enable = 0 ] && del_cron
	if [ $STATUS = Y ];then
		if mount | grep adbyby >/dev/null 2>&1;then
			echo "Umount adbyby"
			umount -l $Z
			rm -rf $P
		fi
		echo "Revert Dnsmasq"
		/etc/init.d/dnsmasq restart >/dev/null 2>&1
		rm -f /tmp/adupdate.log
	fi
}

restart(){
	if [ $enable = 1 ];then
		STATUS=N
		stop
		start
		echo "Restart Dnsmasq"
		/etc/init.d/dnsmasq restart >/dev/null 2>&1
	else
		stop
	fi
}

boot(){
	$Z/gen_include default
	start
}
